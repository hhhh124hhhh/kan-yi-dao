[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "kan-yi-dao-game"
version = "1.0.0"
description = "是男人就砍一刀 - Pygame动作游戏"
authors = [
    {name = "Game Developer", email = "developer@example.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment :: Arcade",
]
dependencies = [
    "pygame>=2.0.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-mock>=3.6",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-mock>=3.6",
    "pytest-xdist>=2.2",
    "pytest-html>=3.1",
]

ai = [
    "openai>=1.0.0",
    "deepseek>=0.1.0",
]

[project.scripts]
kan-yi-dao = "main:main"

[project.urls]
Homepage = "https://github.com/example/kan-yi-dao"
Repository = "https://github.com/example/kan-yi-dao"
Issues = "https://github.com/example/kan-yi-dao/issues"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.txt", "*.md", "*.yml", "*.yaml"]

# Pytest配置
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for component interaction",
    "slow: Slow tests that take longer to run",
    "performance: Performance-related tests",
    "network: Tests that require network access",
    "gui: Tests that require GUI environment",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning:pygame.*",
    "ignore::UserWarning:distutils.*",
]
norecursedirs = [
    ".git",
    ".tox",
    "dist",
    "build",
    "*.egg",
    "__pycache__",
    ".pytest_cache",
]
minversion = "6.0"

# 测试覆盖率配置
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Black代码格式化配置
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Flake8配置
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

# MyPy配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# 项目特定配置
[[tool.mypy.overrides]]
module = [
    "pygame.*",
    "requests.*",
]
ignore_missing_imports = true